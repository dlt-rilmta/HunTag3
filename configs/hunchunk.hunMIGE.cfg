!defaultRadius 5

let krpatt rad 3
let krpatt minLength 2
let krpatt maxLength 99
let krpatt lang hu

let mypatt rad 3
let mypatt minLength 2
let mypatt maxLength 99
let mypatt lang hu
let mypatt since_dt 1
let mypatt CASDiff  1
let mypatt POSSConnect 1
let mypatt fullKr 1


##ez itt 1 volt
# mySpecPatts
# Overloads radius (not rad) by 0!
sentence mypatt krPatts 2 0
##a 4. oszlopbol epitse:
## Overloads radius (not rad) by 0!
##sentence krpatt krPatts 4 0
## Overloads radius (not rad) by 0!
##sentence mypatt myPatts 2,3 0

##Now its called: hasCapOperator
##token capitalized isCapitalizedOperator 0
#token startswithnumber startsWithNumberOperator 0
##token isnumber isNumberOperator 0
#token hasnumber hasNumberOperator 0
#token allcaps isAllcapsOperator 0
#token camel isCamelOperator 0
#token hasdash hasDashOperator 0
#token hasperiod hasPeriodOperator 0
#token shortpattern shortPattern 0

token hasunderscore hasUnderscoreOperator 0

token form getForm 0

# kivilágított    kivilágított    [Afp-sn]MIGE    -       [Afp-sn]        0       12      12      I-N_2+
# év      év      [Nc-sn] NX[abstract=YES,countable=YES,encnt=YES,measure=YES,time=YES]   év/elvont_fogalom/mennyiség/időszak/alapmértékegység/naptári_év  0       2       2       I-N_2+

let ngr n 3
##kiszedjuk az ngramot!
token ngr ngrams 0
#token kr krPieces 2
# wn vagy kr van a 4. -ben
#token kr krPieces 4
token humor humorPieces 2
#token hibrid humorSimple 3
##token stemH humorSimple 1

#token stemH humorSimple 1
#token cats humorSimple 2
#token cats humorPieces 3
token mmo mmoSimple 3
token wn wordNetSimple 4
token stopw humorSimple 5
token length humorSimple 6
token position humorSimple 7





##token krconj krConjs 1

#token prefix prefix 0
##Now its called: firstChar
##token posstart posStart 1
##token posend posEnd 1

#sentence bwsamecases isBetweenSameCases 1
