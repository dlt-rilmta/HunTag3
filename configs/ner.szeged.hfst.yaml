#!/bin/sh
# -*- coding: utf-8, vim: expandtab:ts=4 -*-
# The origin of the idea of 'runable yaml': https://gist.github.com/corvax19/5661251
python3 -c '
import yaml
import sys

try:
    yaml.load(sys.stdin)

except yaml.YAMLError as exc:
    if hasattr(exc, "problem_mark"):
        shifting = 20  # Line no. where "%YAML 1.1" is! (Numbering starts from 0!)
        exc.problem_mark.line += shifting
        exc.context_mark.line += shifting
    print("Syntax error: {0}".format(exc))
    sys.exit(1)

print("Syntax OK!")
'<<EOF
%YAML 1.1
---
default:
 cutoff: 1  #  1 if not set
 radius: 3  # -1 if not set

features:
 - # Checks for underscore (_) character in token
    name: form
    type: token
    action_name: get_form
    fields: 0

 - # N-grams of the letters in a token
    name: ngr
    type: token
    action_name: ngrams
    fields: 0
    options:
        n: 2

 - # The n caracter long prefix ot a token
    name: prefix
    type: token
    action_name: prefix
    fields: 0
    options:
        n: 5


 - # Token pattern: lowercase -> 'a', uppercase -> 'A', other -> '_'
    name: longpatt
    type: token
    action_name: long_pattern
    fields: 0

 - # Token pattern: lowercase -> 'a', uppercase -> 'A', other -> '_', merge neighbouring characters if they are same
    name: shortpatt
    type: token
    action_name: short_pattern
    fields: 0


 - # Does it have capital letter in it anywhere?
    name: hascap
    type: token
    action_name: has_cap_operator
    fields: 0

 - # Does it have all letter capital?
    name: allcaps
    type: token
    action_name: is_allcaps_operator
    fields: 0

 - # Token is an uppercase letter followed by a period (from Bikel et al. (1999))
    name: capperiod
    type: token
    action_name: cap_period_operator
    fields: 0

 - # Is the token Camel case?
    name: camel
    type: token
    action_name: is_camel_operator
    fields: 0

 - # Only first letter is capital?
    name: capitalized
    type: token
    action_name: is_cap_operator
    fields: 0


 - # Token is two digit (from Bikel et al. (1999))
    name: twodigit
    type: token
    action_name: two_digit_num_operator
    fields: 0

 - # Token contains digit and comma (. or ,) (from Bikel et al. (1999))
    name: digitcomma
    type: token
    action_name: contains_digit_and_comma_operator
    fields: 0

 - # Token is four digit
    name: fourdigit
    type: token
    action_name: four_digit_num_operator
    fields: 0

 - # Does the token contain number?
    name: hasnumber
    type: token
    action_name: has_number_operator
    fields: 0

 - # Token is number
    name: isdigit
    type: token
    action_name: is_digit_operator
    fields: 0

 - # Token contains year decade (from Zhou and Su (2002))
    name: yeardecade
    type: token
    action_name: year_decade_operator
    fields: 0


 - # Get lemma
    name: lemma
    type: token
    action_name: get_form
    fields: 1

# - # Is OOV?
#    name: oov
#    type: token
#    action_name: unknown
#    fields: 2

 - # Detect plural form in hfst code
    name: plur
    type: token
    action_name: hfst_plural
    fields: 3

 - # Kr code patterns of a sentence (extended version) EXTENSIONS DISABLED!
    name: krpatt
    type: sentence
    action_name: kr_patts
    fields: 2
    radius: 0  # rad is not radius!
    options:
        rad: 3  # The old config is misleading!
        min_length: 2
        max_length: 99
        lang: hu
        msd: 0
        since_dt: 0  # (Endrédy & Indig 2015, section 4.2)
        cas_diff: 0  # (Endrédy & Indig 2015, section 4.2)
        poss_connect: 0  # (Endrédy & Indig 2015, section 4.2)
        full_kr: 0

# - # Checks if the neighbouring tokens have the same grammatical case
#    name: bwsamecases
#    type: sentence
#    action_name: is_between_same_cases
#    fields: 3
#    options:
#        max_dist: 6

 - # Description: Location names generated from the train corpus
    name: trainloc
    type: lex
    action_name: hunner/lex/loc.fromtraincorpus.lex
    fields: 0

 - # Description: Organisation names generated from the train corpus
    name: trainorg
    type: lex
    action_name: hunner/lex/org.fromtraincorpus.lex
    fields: 0

 - # Description: Person names generated from the train corpus
    name: trainpers
    type: lex
    action_name: hunner/lex/per.fromtraincorpus.lex
    fields: 0

 - # Description: Miscallenous names generated from the train corpus
    name: trainmisc
    type: lex
    action_name: hunner/lex_from_Eszter.Simon/misc.fromtraincorpus.lex
    fields: 0

 #~ - # Description: XXX Fill me!
    #~ name: trainloc
    #~ type: lex
    #~ action_name: hunner/lex/loc.fromtraincorpus.lex
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: trainorg
    #~ type: lex
    #~ action_name: hunner/lex/org.fromtraincorpus.lex
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: trainpers
    #~ type: lex
    #~ action_name: hunner/lex/per.fromtraincorpus.lex
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: trainmisc
    #~ type: lex
    #~ action_name: hunner/lex/misc.fromtraincorpus.lex
    #~ fields: 0

 #~ - # Description: XXX Fill me!
    #~ name: wikiloc
    #~ type: lex
    #~ action_name: ../huwiki/fromTrainLists/loc.fromtrain.list
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: wikiorg
    #~ type: lex
    #~ action_name: ../huwiki/fromTrainLists/misc.fromtrain.list
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: wikipers
    #~ type: lex
    #~ action_name: ../huwiki/fromTrainLists/org.fromtrain.list
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: wikimisc
    #~ type: lex
    #~ action_name: ../huwiki/fromTrainLists/per.fromtrain.list
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: loc
    #~ type: lex
    #~ action_name: hunner/lex/loc/loc_all
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: street
    #~ type: lex
    #~ action_name: hunner/lex/loc/utcanev.matav.lex
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: locsuff
    #~ type: lex
    #~ action_name: hunner/lex/loc/loc_suffix.txt
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: misc
    #~ type: lex
    #~ action_name: hunner/lex/misc/misc_all
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: org
    #~ type: lex
    #~ action_name: hunner/lex/org/org_all
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: orgsuff
    #~ type: lex
    #~ action_name: hunner/lex/org/cegszuffix.lex
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: firstname
    #~ type: lex
    #~ action_name: hunner/lex/per/keresztnev_all
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: lastname
    #~ type: lex
    #~ action_name: hunner/lex/per/vezeteknev_all
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: perspre
    #~ type: lex
    #~ action_name: hunner/lex/per/pers_prefix.txt
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: rang
    #~ type: lex
    #~ action_name: hunner/lex/per/rang.txt
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: loc
    #~ type: lex
    #~ action_name: hunner/lex/loc/loc_bh
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: misc
    #~ type: lex
    #~ action_name: hunner/lex/misc/misc_bh
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: org
    #~ type: lex
    #~ action_name: hunner/lex/org/org_bh
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: kernev
    #~ type: lex
    #~ action_name: hunner/lex/per/kernev_bh
    #~ fields: 0
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: veznev
    #~ type: lex
    #~ action_name: hunner/lex/per/veznev_bh
    #~ fields: 0

...
EOF
