#!/bin/sh
# -*- coding: utf-8, vim: expandtab:ts=4 -*-
# The origin of the idea of 'runable yaml': https://gist.github.com/corvax19/5661251
python3 -c '
import yaml
import sys

try:
    yaml.load(sys.stdin)

except yaml.YAMLError as exc:
    if hasattr(exc, "problem_mark"):
        shifting = 20  # Line no. where "%YAML 1.1" is! (Numbering starts from 0!)
        exc.problem_mark.line += shifting
        exc.context_mark.line += shifting
    print("Syntax error: {0}".format(exc))
    sys.exit(1)

print("Syntax OK!")
'<<EOF
%YAML 1.1
---
default:
 cutoff: 1  #  1 if not set
 radius: 5  # -1 if not set

features:
 - # Kr code patterns of a sentence (extended version) EXTENSIONS ENABLED! (otherwise same as hunchunk.krPatt.yaml)
   # For use with KR code! (Endrédy & Indig 2015, 3rd column in Table 6)
    name: krpatt
    type: sentence
    action_name: krPatts
    fields: 1
    radius: 0  # rad is not radius!
    options:
        rad: 3  # The old config is misleading!
        minLength: 2
        maxLength: 99
        lang: hu
        MSD: 1
        since_dt: 1  # (Endrédy & Indig 2015, section 4.2)
        CASDiff: 1  # (Endrédy & Indig 2015, section 4.2)
        POSSConnect: 1  # (Endrédy & Indig 2015, section 4.2)
        fullKr: 0

 #~ - # Does it have capital letter in it anywhere? (old isCapitalizedOperator)
    #~ name: capitalized
    #~ type: token
    #~ action_name: hasCapOperator
    #~ fields: 0
#~ 
 #~ - # Token starts with number?
    #~ name: startswithnumber
    #~ type: token
    #~ action_name: startsWithNumberOperator
    #~ fields: 0
#~ 
 #~ - # Does 'stupidstem' contain letters or only numbers and puncts?
    #~ name: isnumber
    #~ type: token
    #~ action_name: isNumberOperator
    #~ fields: 0
#~ 
 #~ - # Does the token contain number?
    #~ name: hasnumber
    #~ type: token
    #~ action_name: hasNumberOperator
    #~ fields: 0
#~ 
  #~ - # Does 'stupidstem' contain only capital letters?
    #~ name: allcaps
    #~ type: token
    #~ action_name: isAllcapsOperator
    #~ fields: 0
#~ 
  #~ - # Is the token Camel case?
    #~ name: camel
    #~ type: token
    #~ action_name: isCamelOperator
    #~ fields: 0
#~
  #~ - # Does the token contain dash?
    #~ name: hasdash
    #~ type: token
    #~ action_name: hasDashOperator
    #~ fields: 0
#~
  #~ - # Does the token contain period?
    #~ name: hasperiod
    #~ type: token
    #~ action_name: hasPeriodOperator
    #~ fields: 0
#~
  #~ - # Token pattern: lowercase -> 'a', uppercase -> 'A', other -> '_', merge neighbouring characters if they are same
    #~ name: shortpattern
    #~ type: token
    #~ action_name: shortPattern
    #~ fields: 0
#~
 - # Checks for underscore (_) character in token (duplicate)
    name: hasunderscore
    type: token
    action_name: hasUnderscoreOperator
    fields: 0

 - # Checks for underscore (_) character in token
    name: form
    type: token
    action_name: getForm
    fields: 0

 - # N-grams of the letters in a token
    name: ngr
    type: token
    action_name: ngrams
    fields: 0
    options:
        n: 3

 - # Kr code pieces
    name: kr
    type: token
    action_name: krPieces
    fields: 1

 #~ - # The n caracter long prefix of a token
    #~ name: prefix
    #~ type: token
    #~ action_name: prefix
    #~ fields: 0
    #~ options:
    #~     n: 3  # XXX No default value!
#~ 
 #~ - # The first letter of the BNC tag which is roughly the main POS tag (old posStart)
    #~ name: posstart
    #~ type: token
    #~ action_name: firstChar
    #~ fields: 1
#~
 #~ - # Checks if the neighbouring tokens have the same grammatical case
    #~ name: bwsamecases
    #~ type: sentence
    #~ action_name: isBetweenSameCases
    #~ fields: 1

...
EOF
